


[0707.1977] MONTE CARLO SIMULATION AND STATISTICAL ANALYSIS OF THE EFFECT OF CODING TABLE SPECIFICITY ON GENETIC INFORMATION CODING















  function detectColorScheme(){
    var theme="light";
    var current_theme = localStorage.getItem("ar5iv_theme");
    if(current_theme){
      if(current_theme == "dark"){
        theme = "dark";
      } }
    else if(!window.matchMedia) { return false; }
    else if(window.matchMedia("(prefers-color-scheme: dark)").matches) {
      theme = "dark"; }
    if (theme=="dark") {
      document.documentElement.setAttribute("data-theme", "dark");
    } else {
      document.documentElement.setAttribute("data-theme", "light"); } }

  detectColorScheme();

  function toggleColorScheme(){
    var current_theme = localStorage.getItem("ar5iv_theme");
    if (current_theme) {
      if (current_theme == "light") {
        localStorage.setItem("ar5iv_theme", "dark"); }
      else {
        localStorage.setItem("ar5iv_theme", "light"); } }
    else {
        localStorage.setItem("ar5iv_theme", "dark"); }
    detectColorScheme(); }







MONTE CARLO SIMULATION AND STATISTICAL ANALYSIS OF THE EFFECT OF CODING TABLE SPECIFICITY ON GENETIC INFORMATION CODING


E. Gultepe

Physics Department, Northeastern University, Boston, Massachusetts, 02115, USA


M.Â L. Kurnaz

Department of Physics, Bogazici University, 34342
Bebek Istanbul, Turkey

levent.kurnaz@boun.edu.tr
Corresponding Author



Abstract
We present a computer simulation, which is inspired by Penna model, to help understanding the effect of genetic coding tables on population dynamics. To represent populations we used real and artificial gene sequences in this model. We coded these sequences using different amino acid tables in Nature, the standard table as well as the tables which are used by mithocondria and some eukaryotes. Contrary to common belief we find that the standard code table which is used in most organisms in Nature, does not give the most resilient coding against point mutations.



1 INTRODUCTION




Modeling population dynamics has been popular in physics community for a while mostly because complexity of the system bears the necessity of the statistical and computational tools. Physicists brought the models which can give rise to computational simulations together with looking for the simplest solution approach into this subject. Among all others [1, 2, 3, 4], Penna model [5] is the most extensive simulation scheme used in population dynamics. Simulations for population dynamics usually take many different factors of live into account. In real life it is very difficult to have only one of the aspects of life count where we neglect the effects of everything else. For example in real life you cannot say that the only cause for death is point mutations because then you have to keep the individuals in the system from dying of âold ageâ or of malnutrition or of fighting amongst the members. In simulations it is much easier to ignore all these facts of life and concentrate only on one simple aspect. In this work we have neglected all the other aspects of life and concentrated only on the effect of point mutations on survivability of the individuals.


Genetic information of all living organism (except some viruses) is stored in DNA. The segment of DNA which contains necessary information to produce a specific protein is called gene. A real gene is composed of two different parts: a coding portion and a non-coding portion. The coding part, exon, is responsible for protein synthesis whereas the rest, intron, does not code a protein and the purpose of this part is not clearly understood yet.


The information in DNA is coded by using four different types of monomers adenine (A), guanine (G), cytosine (C) and thymine(T). These monomers are the letters of the genetic alphabet and they construct 3-letters long words, codons. Every codon on DNA codes an amino-acid during the protein synthesis. There are 43superscript434^{3}, 64 possible combination of codons available on DNA. However; in Nature there are only 20 amino acids available for protein coding and as a result there is no one-to-one codon-amino acid correspondence. The table which determines how the codons are mapped into the amino acids is called amino acid table or genetic coding table.


For a long time it was believed that the amino acid table of Nature was universal, Standart Genetic Code (SGC). However; we now know that there are few exceptions in codon usage which are confined to mitochondria and certain protozoa [6]. In these particular tables the same number of amino acids is used, but some of these amino acids are coded by different codons. For example, in SGC , the codon âAUAâ codes Isoleucine, the codon âUGAâ codes Stop, and the codons âAGAâ and âAGGâ code Arginine . However, in the table of Vertebrate Mitochondrial Code, they code Methionine, Tryptophan, and Stop respectively [7].


Recently, we have developed a Monte Carlo simulation model [8] inspired by the Penna model to investigate the significance of the number of amino acids in population dynamics. In that model, each individual was represented by a human cytokine gene sequence and mutation was assumed to be the only cause of death by eliminating all other effects. In that study, it has been shown that for maximum tolerance against mutations, the number of amino acids which codes the genetic information, is bounded between 202020 to 242424. The number of amino acids used in Nature, 212121 (20 amino acids plus the Stop codon), is in this optimum range.


In this paper, we used the same model to investigate the endurance of different amino acid tables against point mutations neglecting any other causes of death.




2 COMPUTATIONAL METHOD




In our model, an individual was represented by three different gene sequences. First, we have used a real gene from Nature human cytokine (LD78 Homo sapiens blood lymphocyte gene on the DNA 17th chromosome) [9] same as in the previous model. This gene is playing an important role in immune system of human body, hence any problem in generating this gene is lethal. Afterwards we used the same model on different mammalian genes, in this paper we also report the results for human ARNT gene (Homo sapiens aryl hydrocarbon receptor nuclear translocator, transcript variant 1, mRNA) as an example.


Next, we have created an artificial human gene, the average human gene, which basically reflects the codon usage frequency found in Homo sapiens. This gene consists of 1000 nucleotides (frequency is taken as an integer value per one thousand nucleotides given in [10]) in a randomly chosen sequence. This artificial gene is considered to represent the whole human genome. This assures that the results we have obtained are not specific to the human cytokine gene but for whole genome.


For the sake of simplicity, we have not included reproduction and we also have neglected all other effects causing death, except mutation. Using this model, we have investigated the effects of mutations on the population size. A mutation in this model was taken as a change of one nucleotide in the gene. It can be either lethal or harmless depending on whether it causes a change in the amino acid chain or not. We kept all mutation rates equal like in the Jukes-Cantor mutation scheme [11].


When a mutation takes place on the exon part, there are two possibilities: The changed codon either will code the same amino acid or it will code a different amino acid [Fig. 1] since an amino acid can be coded by more than one codon. If the mutant codon still codes for the same amino acid, this mutation is taken to be harmless because at the end it will not affect the synthesized protein. However, if the mutant codon codes for a different amino acid, the protein cannot be produced and the individual would simply die.


Figure 1: A mutation on exon part may be either harmless or lethal depends on whether it change the coded amino acid.


To be more explicit, the codons AAA and AAG code the same amino acid, âlysineâ; hence if AAA turns into AAG as a result of a mutation the amino acid will not change and the protein can be constructed safely. However; if AAA turns into AGA, which codes the amino acid âarginineâ, the amino acid chain will change and we assume that the protein can not build up, which means the represented organism will die. There can be a mutation which converts AAA to AAX where X â \neq A, G, C, or T; then the individual dies automatically. As a model, we are looking at a simpler case where a mutation changes A to one of G, C, or T, but not X.


Since reproduction is not included in the model, the population can only diminish. The decrease in population can be found by calculating the probability of a deleterious mutation. The probability of the mutation changing the amino acid depends on the codon; so one needs to find the probability of hitting each different codon type. First, the probability of hitting a codon type (PÎ±subscriptðð¼P_{\alpha}) is calculated as the ratio of the number of codons of that type in the gene (NÎ±subscriptðð¼N_{\alpha}) to total number of codons. Then we need to exclude the mutations that do not cause a change in the amino acid and calculate the probability of a change occurring in the amino acid caused by
a change in one nucleotide (P(d/Î±P(d/{\alpha})).


We used only the exon (protein coding) part of the gene considering any mutations on the intron part is harmless. As a simple example, the human cytokine gene has a total length of 2068 nucleotides; 621 nucleotides in exon part and 1447 ones in intron. The probability of hitting the exon part of the gene is simply the ratio of the exon part to the total gene:




Pâ(hâiâtâtâiânâgâeâxâoân)=6212068=0.3032ðâðð¡ð¡ððððð¥ðð62120680.3032P(hitting\&gt;exon)=\frac{621}{2068}=0.3032

(1)




Hence; the probability of having a deleterious mutation for all of the gene is simply a product of mutation probability and probability of hitting the exon part of gene. As the chances of hitting any part of the gene is a same, we can neglect the intron part in the simulation since this would only be a multiplicative constant in the problem. Therefore the probability of having a deleterious mutation for all of the human cytokine gene is simply:






Pâ(dâeâlâeâtâeârâiâoâuâs)ââÎ±=164[PÎ±âPâ(d/Î±)]=0.7729proportional-toðððððð¡ððððð¢ð superscriptsubscriptð¼164delimited-[]subscriptðð¼ððð¼0.7729P(deleterious)\propto\sum_{\alpha=1}^{64}[P_{\alpha}P(d/\alpha)]=0.7729

(2)




The survival probability can be calculated by:






Pâ(sâuârâvâiâvâiânâg)=1âPâ(dâeâlâeâtâeârâiâoâuâs)=0.2271ðð ð¢ðð£ðð£ððð1ðððððð¡ððððð¢ð 0.2271P(surviving)=1-P(deleterious)=0.2271

(3)




If we take an initial population of N0subscriptð0N_{0} genes (individuals), after nðn number of mutations, to the first order, the number of surviving individuals (NnsubscriptððN_{n}) is given by:






NnâN0âPâ(sâuârâvâiâvâiânâg)nsubscriptððsubscriptð0ðsuperscriptð ð¢ðð£ðð£ððððN_{n}\approx N_{0}P(surviving)^{n}

(4)




Hence, we obtain the âprobability of survivalâ with the slope of the number of surviving individuals versus time graph:






sâlâoâpâeâlânâ[Pâ(sâuârâvâiâvâiânâg)]=â1.4823ð ððððððdelimited-[]ðð ð¢ðð£ðð£ððð1.4823slope\approx ln[P(surviving)]=-1.4823

(5)




Similarly the probability of survival can be calculated for all the genes separately. However in this calculation once we make a change in the gene sequence and if the individual survives, we forget about the change we have made and restart the process for the second mutation cycle with the original gene sequence. In Nature, if the individual survives, the second mutation cycle starts with the mutated gene sequence and not the original one. Therefore, to be able to get closer to Nature we have also written a simulation code which allows for the mutation in the gene sequence to be kept in the next mutation mutation cycle.




3 SIMULATION




In this simulation, the population consists of individuals which are described by only one gene. Genes are represented by arrays which contain 0, 1, 2, and 3âs instead of the nucleotides Adenine (A), Guanine (G), Cytosine (C) and Thymine (Uracil (U)) respectively. A sign bit which shows if the gene has a deleterious mutation (1) or not (0) is also included in the array [8].


In every time step, all of the individuals undergo a random mutation. If the mutation is deleterious, i. e. if it changes the amino acid, the sign bit is changed to â1â, the individual is deleted from the population (death) and the time step is recorded. Otherwise, the sign bit is kept â0â and the individual survives.


When the mutation cycle is finished, the number of surviving individuals in each time step is calculated. Since the probability of mutation is independent of the number of individuals, surviving individuals also give us the population size. Hence, we have an exponential population decay and the exponent depends on the probability of surviving (Pâ(sâuârâvâiâvâiânâg)ðð ð¢ðð£ðð£ðððP(surviving)). Logarithm of the population is fitted to a straight line and the slope of the line is calculated. All simulations are run for 10 times and probability of surviving is calculated according to the weighted average of these 10 runs.




4 RESULTS AND DISCUSSION




In this work, we have investigated the following amino acid tables in addition to SGC:




â¢ 

Alternative Yeast Nuclear Code (AYNC),



â¢ 

Ascidian Mitochondrial Code (AMC),



â¢ 

Blepharisma Nuclear Code (BNC),



â¢ 

Ciliate, Dasycladacean and Hexamita Nuclear Code (CDHNC),



â¢ 

Echinoderm Mitochondrial Code (EMC),



â¢ 

Euplotid Nuclear Code (ENC),



â¢ 

Flatworm Mitochondrial Code (FMC),



â¢ 

Invertebrate Mitochondrial Code (IMC),



â¢ 

Mold, Protozoan, and Coelenterate Mitochondrial Code and Mycoplasma/Spiroplasma Code (MSC),



â¢ 

Vertebrate Mitochondrial Code (VMC), and



â¢ 

Yeast Mitochondrial Code (YMC).





The results of our simulations, using two different human gene sequences, are given in Table 1 and Table 2. We have selected these two genes as representatives, however, the same results have been obtained in many other human genes simulated. We have also used some genes from Mus Musculus (common house mouse) and Rattus (rat) where we have obtained similar results. As these detailed results are more appropriate for an evolutionary biology journal, we report only the representative results.


Table 1: Average slopes of the population decrease comparing different genetic code tables with human cytokine gene. Larger the magnitude of the slope is, the more the survival chance.



Code
Simulation
Calculation




FMC
â1.4056Â±0.0005plus-or-minus1.40560.0005-1.4056\pm 0.0005
1.4053


EMC
â1.4164Â±0.0005plus-or-minus1.41640.0005-1.4164\pm 0.0005
1.4163


IMC
â1.4320Â±0.0001plus-or-minus1.43200.0001-1.4320\pm 0.0001
1.4319


ENC
â1.4415Â±0.0005plus-or-minus1.44150.0005-1.4415\pm 0.0005
1.4409


BNC
â1.4691Â±0.0003plus-or-minus1.46910.0003-1.4691\pm 0.0003
1.4685


MSC
â1.4759Â±0.0003plus-or-minus1.47590.0003-1.4759\pm 0.0003
1.4755


CDHNC
â1.4784Â±0.0005plus-or-minus1.47840.0005-1.4784\pm 0.0005
1.4779


AMC
â1.4784Â±0.0005plus-or-minus1.47840.0005-1.4784\pm 0.0005
1.4779


SGC
-1.4830Â±0.0005plus-or-minus-1.48300.0005\textbf{-1.4830}\pm\textbf{0.0005}
1.4826


VMC
â1.5020Â±0.0001plus-or-minus1.50200.0001-1.5020\pm 0.0001
1.5017


YMC
â1.5677Â±0.0007plus-or-minus1.56770.0007-1.5677\pm 0.0007
1.5638


AYNC
â1.5800Â±0.0001plus-or-minus1.58000.0001-1.5800\pm 0.0001
1.5793





Table 2: Average slopes of the population decrease comparing different genetic code tables with human ARNT gene. Larger the magnitude of the slope is, the more the survival chance.



Code
Simulation
Calculation




FMC
â1.4038Â±0.0004plus-or-minus1.40380.0004-1.4038\pm 0.0004
1.4036


EMC
â1.4101Â±0.0007plus-or-minus1.41010.0007-1.4101\pm 0.0007
1.4099


CDHNC
â1.4268Â±0.0004plus-or-minus1.42680.0004-1.4268\pm 0.0004
1.4268


IMC
â1.4288Â±0.0004plus-or-minus1.42880.0004-1.4288\pm 0.0004
1.4285


BNC
â1.4368Â±0.0004plus-or-minus1.43680.0004-1.4368\pm 0.0004
1.4368


ENC
â1.4566Â±0.0005plus-or-minus1.45660.0005-1.4566\pm 0.0005
1.4565


AMC
â1.4586Â±0.0005plus-or-minus1.45860.0005-1.4586\pm 0.0005
1.4583


MSC
â1.4609Â±0.0006plus-or-minus1.46090.0006-1.4609\pm 0.0006
1.4607


SGC
-1.4653Â±0.0005plus-or-minus-1.46530.0005\textbf{-1.4653}\pm\textbf{0.0005}
1.4650


VMC
â1.4882Â±0.0008plus-or-minus1.48820.0008-1.4882\pm 0.0008
1.4878


AYNC
â1.5215Â±0.0005plus-or-minus1.52150.0005-1.5215\pm 0.0005
1.5213


YMC
â1.5295Â±0.0005plus-or-minus1.52950.0005-1.5295\pm 0.0005
1.5271





If it is assumed that the genetic code table is optimized for increasing chance of survival against mutations, then the results of Table 1 and Table 2 cause many concerns. Even though there are few code tables giving results which favor the usage of SGC (like VMC, AYNC, and YMC), we can see that if we use a different code table, for example FMC, our white blood cell production would be more resilient towards mutations.


To be certain that the results obtained in Table 1 and Table 2 do not depend on particular genes, we have first created an artificial average human gene and we run simulations using this average human gene as representetive of individuals. Table 3 shows the results from these simulations.


Table 3: Average slopes of the population decrease using different genetic code tables and the average human gene. Larger the magnitude of the slope is, the more the survival chance.



Code
Simulation
Calculation




FMC
â1.4081Â±0.0005plus-or-minus1.40810.0005-1.4081\pm 0.0005
1.4083


EMC
â1.4204Â±0.0005plus-or-minus1.42040.0005-1.4204\pm 0.0005
1.4207


IMC
â1.4438Â±0.0003plus-or-minus1.44380.0003-1.4438\pm 0.0003
1.4439


CDHNC
â1.4498Â±0.0001plus-or-minus1.44980.0001-1.4498\pm 0.0001
1.4501


BNC
â1.4554Â±0.0006plus-or-minus1.45540.0006-1.4554\pm 0.0006
1.4558


ENC
â1.4595Â±0.0005plus-or-minus1.45950.0005-1.4595\pm 0.0005
1.4596


MSC
â1.4655Â±0.0005plus-or-minus1.46550.0005-1.4655\pm 0.0005
1.4658


AMC
â1.4693Â±0.0006plus-or-minus1.46930.0006-1.4693\pm 0.0006
1.4697


SGC
-1.4712Â±0.0004plus-or-minus-1.47120.0004\textbf{-1.4712}\pm\textbf{0.0004}
1.4716


VMC
â1.4969Â±0.0005plus-or-minus1.49690.0005-1.4969\pm 0.0005
1.4971


YMC
â1.5540Â±0.0006plus-or-minus1.55400.0006-1.5540\pm 0.0006
1.5543


AYNC
â1.5803Â±0.0001plus-or-minus1.58030.0001-1.5803\pm 0.0001
1.5804





In Table 3, FMC still performs much better and the worst performance is still by AYNC followed by YMC. The human average gene gives comparable results to the genes chosen in this work, indicating that the advantage of SGC cannot be simply explained on the basis of singular mutations without taking higher order effects like protein folding into account.




5 CONCLUSION




In this paper, we used a computer simulation to represent a living organism under mutations. Furthermore, we changed the genetic code used in the simulations to analyze its effect on population stability.


We have used different code tables utilized in the Nature in connection with two sample genes, human cytokine gene and human ARNT gene . Since these genes are one of the key factors for our bodies, we assumed that if the organism fails to produce any of the proteins coded by these genes, it will not be able to survive.


The simulations show that SGC, which is being used in most of the vertebrates, actually does not give the most resilient organisms against point mutations if we only apply simple simulation rules.


To test these results, we have also created an artificial average human gene. If we compare our results as SGC versus the rest of the coding schemes, the results do not change, i. e., SGC is still not the best solution. However, when we compare other code tables within themselves we see that some code tables give better results with different human genes whereas others give better results with the artificial average human gene. This result is most pronounced with CDHNC, which survives much better if we use the average human gene than the human cytokine gene.




6 ACKNOWLEDGEMENTS


I am grateful to Dr. Isil Aksan Kurnaz and Dr. Muhittin Mungan for their contributions on the model and the calculations. This work has been supported by Bogazici University under BAP 07B302.



References



[1]

N. G. F. Medeiros and
R. N. Onody
Phys. Rev. E 64,
041915 (2001).




[2]

L. D. Mueller and
M. R. Rose
PNAS 93,
15249 (1996).




[3]

Y. Cui
R. S. Chen and
W. H. Wong
PNAS 97,
3330 (2000).




[4]

M. Heumann and
M. H tzel
J. Stat. Phys. 79,
483 (1995).




[5]

T. J. P. Penna,
J. Stat. Phys. 78,
1629 (1995).




[6]

R. F.Â Weaver,
Molecular Biology (McGraw-Hill, New York, 2002).




[7]

www.ncbi.nlm.nih.gov/Taxonomy/Utils/wprintgc.cgi?mode=c.




[8]

E. Gultepe and
M. L. Kurnaz
Physica A 357,
525 (2005).




[9]

www.ncbi.nlm.nih.gov/entrez/viewer.fcgi?db=nucleotide&amp;val=285912.




[10]

www.kazusa.or.jp/codon/cgi-bin/showcodon.cgi?species=Homo+sapiens +[gbpri]




[11]

T. H. Jukes and
C. R. Cantor
in Mammalian Protein Metabolism, edited by H. N. Munro
(Academic Press, New York,
21 1969).







â
    
    Feelinglucky?
    Conversionreport
    Reportan issue
    View&nbsp;originalon&nbsp;arXivâº


Copyright
Privacy Policy

Generated  on Tue Mar 19 11:39:31 2024 by LaTeXML



    
      var canMathML = typeof(MathMLElement) == "function";
      if (!canMathML) {
        var body = document.querySelector("body");
        body.firstElementChild.setAttribute('style', 'opacity: 0;');
        var loading = document.createElement("div");
        loading.setAttribute("id", "mathjax-loading-spinner");
        var message = document.createElement("div");
        message.setAttribute("id", "mathjax-loading-message");
        message.innerText = "Typesetting Equations...";
        body.prepend(loading);
        body.prepend(message);

        var el = document.createElement("script");
        el.src = "https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js";
        document.querySelector("head").appendChild(el);

        window.MathJax = {
          startup: {
            pageReady: () => {
              return MathJax.startup.defaultPageReady().then(() => {
                body.removeChild(loading);
                body.removeChild(message);
                body.firstElementChild.removeAttribute('style');
              }); } } };
      }
    
    
    // Auxiliary function, building the preview feature when
    // an inline citation is clicked
    function clicked_cite(e) {
      e.preventDefault();
      let cite = this.closest('.ltx_cite');
      let next = cite.nextSibling;
      if (next && next.nodeType == Node.ELEMENT_NODE && next.getAttribute('class') == "ar5iv-bibitem-preview") {
        next.remove();
        return; }
      // Before adding a preview modal,
      // cleanup older previews, in case they're still open
      document.querySelectorAll('span.ar5iv-bibitem-preview').forEach(function(node) {
        node.remove();
      })

      // Create the preview
      preview = document.createElement('span');
      preview.setAttribute('class','ar5iv-bibitem-preview');
      let target = document.getElementById(this.getAttribute('href').slice(1));
      target.childNodes.forEach(function (child) {
        preview.append(child.cloneNode(true));
      });
      let close_x = document.createElement('button');
      close_x.setAttribute("aria-label","Close modal for bibliography item preview");
      close_x.textContent = "Ã";
      close_x.setAttribute('class', 'ar5iv-button-close-preview');
      close_x.setAttribute('onclick','this.parentNode.remove()');
      preview.append(close_x);
      preview.querySelectorAll('.ltx_tag_bibitem').forEach(function(node) {
        node.remove();
      });
      cite.parentNode.insertBefore(preview, cite.nextSibling);
      return;
    }
    // Global Document initialization:
    // - assign the preview feature to all inline citation links
    document.querySelectorAll(".ltx_cite .ltx_ref").forEach(function (link) {
      link.addEventListener("click", clicked_cite);
    });
    
    

